# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  test-mock-application:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor

    machine:
      image: ubuntu-2004:current
      docker_layer_caching: true
    # docker:
    #   - image: circleci/python:3.10
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout
      - run:
          name: Build images of services declared in docker-compose.yml
          command: |
            cd ./examples/mock/
            docker-compose build
      - run:
          name: Start all services declared in docker-compose.yml
          command: |
            cd ./examples/mock/
            docker-compose up -d
            # In this example, we have a "contacts" service, and
            # we are trying to check, via `dockerize`, if the service is ready.
            docker container run --network mock_web \
              docker.io/jwilder/dockerize \
              -wait http://caddy:8000/healthcheck \
              -wait-retry-interval 2s \
              -timeout 20s          

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  test_everything:
    jobs:
      - test-mock-application
