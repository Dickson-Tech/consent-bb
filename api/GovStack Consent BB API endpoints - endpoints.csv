Endpoint slug,Type,Use case,Scenario,Arguments,Returns,Description,Data sensitivity,summary,API Label,responseOK,security
API tag: config,,,,,,,,,,,
CRUDL for Policy object,,,,,,,,,,,
/config/policy/,POST,UC-C-PIC-A-001,,Policy,"Policy, Revision",CREATE - Creates a new Policy object and returns the new object and a PolicyRevision,FALSE,,configPolicyCreate,"A set consisting of the new Policy object created, together with the initial Revision object.",org
/config/policy/{policyId}/,GET,UC-C-PIC-A-003,,PolicyFilter,"Policy, Revision","READ - get a Policy object + latest Revision. If a PolicyFilter is supplied and contains a revision_id, then this specific revision is returned.",FALSE,,orgReadPolicy,,org
/config/policy/{policyId}/revisions/,GET,UC-C-PIC-A-003,,,"Policy, Revision<List>",LIST - returns a Policy object with a list of all Revisions,FALSE,,orgListPolicyRevisions,,org
/config/policy/{id}/,PUT,UC-C-PIC-A-002,,Policy,"Policy, Revision","UPDATE - Updates an existing Policy object, returning the updated version and a new revision. Updating a Policy does not affect existing references in Agreement, the new revision should be specified for Agreement.",FALSE,,orgUpdatePolicy,,org
/config/policy/{id}/,DELETE,UC-C-PIC-A-004,,,Revision,"DELETE - Deletes an existing Policy object, returning the updated version and a new revision. Deleting a Policy is not possible if it's associated with active Agreement.",FALSE,,orgDeletePolicy,,org
/config/policies/,GET,"UC-C-PIC-A-001, UC-C-PIC-A-002",,PolicyFilter,Policy<List>,LIST - Fetches list of readable Policy objects,FALSE,Returns a list of readable Policy objects,orgListPolicy,A list of Policy objects readable for the current session's credentials.,admin
CRUDL for Agreement object,,,,,,,FALSE,,,,org
/config/agreement/{agreementId}/,GET,UC-C-PIC-A-003,,,"Agreement, Revision",READ - fetches the latest version of an Agreement,FALSE,,configAgreementRead,,org
/config/agreement/,POST,UC-C-PIC-A-001,,Agreement,"Agreement, Revision",CREATE - A new Agreement object is created and returned together with AgreementRevision,FALSE,,orgCreateAgreement,,org
/config/agreement/{agreementId}/,PUT,UC-C-PIC-A-002,,Agreement,"Agreement, Revision",UPDATE - An existing Agreement object is created and returned together with AgreementRevision,FALSE,,orgUpdateAgreement,,org
/config/agreement/{agreementId}/,DELETE,UC-C-PIC-A-004,,,Revision,,FALSE,,orgDeleteAgreement,,org
/config/agreements/,GET,UC-C-PIC-A-003,,AgreementFilter,Agreement<List>,,FALSE,,orgListAgreement,,org
,,,,,,,FALSE,,,,
API tag: service,,,,,,,,,,,
"CRUDL for ""Individual"" object",,,,,,,TRUE,,,,org
/service/individual/,POST,,,RegistryReference,Individual,CREATE - Creates an Individual in the Consent system,TRUE,,orgIndividualCreate,,org
/service/individual/{individualId}/,GET,,,,Individual,READ - Fetch an Individual in the Consent system,TRUE,,orgIndividualRead,,org
/service/individual/{individualId}/,PUT,,,,Individual,UPDATE - Updates an Individual in the Consent system,TRUE,,orgIndividualUpdate,,org
/service/individual/{individualId}/,DELETE,,,,Individual,DELETE - entirely removes an individual from the system and cascades necessary actions to related ConsentRecord objects,TRUE,,orgIndividualDelete,,org
/service/individuals/,GET,,,RegistryReference,Individual,LIST - lists individuals in the system,TRUE,,orgIndividualList,,org
"Read operation for ""Agreement"" object",,,,,,,FALSE,,,,
/service/agreement/{agreementId}/,GET,UC-C-PIC-A-003,,,"Agreement, Revision",READ - fetches the latest version of an Agreement,FALSE,,serviceAgreementRead,,org
"Read operation for ""Policy"" object",,,,,,,FALSE,,,,
/service/policy/{policyId}/,GET,UC-C-PIC-A-003,,,"Policy, Revision",READ - fetches the latest version of a Policy,FALSE,,servicePolicyRead,,org
"Read operation for ""Purpose"" object",,,,,,,FALSE,,,,
/service/purpose/{purposeId}/,GET,UC-C-PIC-A-003,,,"AgreementPurpose, Revision",READ - fetches the latest version of an AgreementPurpose,FALSE,,serviceAgreementPurposeRead,,org
"List operation for ""AgreementData"" object",,,,,,,FALSE,,,,
/service/agreement/{agreementId}/agreementdata/,GET,UC-C-PIC-A-003,,,AgreementData<List>,READ - fetches a list of latest versions of AgreementData associated with an Agreement,FALSE,,serviceAgreementDataRead,,org
Verification mechanisms,,,,,,,FALSE,,,,
/service/verification/agreements/,GET,UC-C-PIC-A-003,1.1,AgreementFilter,ConsentRecord<List>,LIST - Fetch consent records for suplied AgreementFilter,FALSE,,serviceVerificationAgreementList,,consumer
/service/verification/agreement/{agreementId}/,GET,UC-C-PIC-A-003,1.2,,"ConsentRecord, Revision",READ - Fetch a specific Consent Record (latest revision). Individual ID supplied as HTTP header.,FALSE,,serviceVerificationAgreementConsentRecordRead,,consumer
/service/verification/consentrecords/,GET,UC-C-PIC-A-003,"3.1, 1.2",ConsentRecordFilter,ConsentRecord<List>,"LIST - Fetch consent records (latest revision). For a given Agreement and Individual, query if consent exists",TRUE,,serviceVerificationConsentRecordList,,consumer
Recording consent (giving/withdrawing),,,,,,All services need to specify the Individual ID as an HTTP header.,FALSE,,,,
/service/individual/record/agreement/{agreementId}/,POST,UC-C-PIC-I-002,1.2,"individualId, agreementId, revisionId","ConsentRecord, Revision","CREATE - For a particular Individual and a particular Agreement, create a new Consent Record pointing to the current Revision of a given Agreement. Individual ID supplied as HTTP header.",TRUE,,serviceCreateIndividualConsentRecord,,individual
/service/individual/record/consentrecord/draft/,POST,UC-C-PIC-I-002,1.2,"individualId, agreementId, revisionId","ConsentRecord, Signature",CREATE - Gets a DRAFT (unsaved) ConsentRecord and Signature objects (without a PK) for a given agreementId.,TRUE,,serviceCreateIndividualConsentRecordDraft,,individual
/service/individual/record/consentrecord/,POST,UC-C-PIC-I-002,1.2,"ConsentRecord, Signature","ConsentRecord, Signature",CREATE - Creates a paired ConsentRecord and Signature object. Returns the same objects with the PK defined.,TRUE,,serviceCreateIndividualConsentRecordAndSignature,,individual
/service/individual/record/consentrecord/{consentRecordId}/,PUT,UC-C-PIC-I-003,,"Individual, Agreement, Revision","ConsentRecord, Revision",UPDATE* - Update a particular Consent Record. Individual ID supplied as HTTP header. Note that updating a signed Consent Record invalidates its signature.,TRUE,,serviceUpdateIndividualConsentRecord,,individual
/service/individual/record/consentrecord/{consentRecordId}/signature/,POST,UC-Post-Partum-001-Registration_PostPartum_and_InfantCare,,,Signature,CREATE - Creates and returns a blank Signature object for the Consent Record.,TRUE,,serviceCreateIndividualConsentRecordSignature,,individual
/service/individual/record/consentrecord/{consentRecordId}/signature/,PUT,UC-Post-Partum-001-Registration_PostPartum_and_InfantCare,,Signature,Signature,UPDATE - Updates a Signature object for a Consent Record. This is used to add a signature to an existing unsigned Signature object. Consent BB is responsible for updating the Consent Record state.,TRUE,,serviceUpdateIndividualConsentRecordSignature,,individual
/service/individual/record/agreement/,GET,UC-C-PIC-I-001,,,"ConsentRecord<List>, Agreement<List>",LIST - Individual ID supplied as HTTP header.,TRUE,,serviceListIndividualRecordList,,individual
/service/individual/record/agreement/{agreementId}/,GET,UC-C-PIC-I-001,,,"ConsentRecord, Revision<List>",READ - Individual ID supplied as HTTP header.,TRUE,,serviceReadIndividualRecordRead,,individual
/service/individual/record/,DELETE,UC-C-PIC-I-003,,,,"DELETE - Cascading delete operation for Right To Be Forgotten, deletes all Consent Records that shall not be retained and have a ""forgettable"" Agreement. May also delete an unsigned Consent Record, for instance in cases where the user exits the signing process. Individual ID supplied as HTTP header.",TRUE,,serviceDeleteAllRecords,,individual
,,,,,,,,,,,
API tag: auditor,,,,,,,,,,,
/audit/trackers/,GET,"UC-C-PIC-AT-001, UC-C-PIC-AT-002",,,AuditTracker<List>,LIST - show available AuditTracker objects,,,auditListTrackers,,
/audit/tracker/,POST,"UC-C-PIC-AT-001, UC-C-PIC-AT-002",,AuditTracker,AuditTracker,CREATE - A new AuditTracker is set up,,,auditCreateTracker,,
/audit/tracker/{trackerId}/,GET,"UC-C-PIC-AT-001, UC-C-PIC-AT-002",,,AuditTracker,READ - get the details of an AuditTracker,,,auditReadTracker,,
/audit/tracker/{trackerId}/,PUT,"UC-C-PIC-AT-001, UC-C-PIC-AT-002",,AuditTracker,AuditTracker,UPDATE - get the details of an AuditTracker,,,auditUpdateTracker,,
/audit/tracker/{trackerId}/,DELETE,"UC-C-PIC-AT-001, UC-C-PIC-AT-002",,,AuditTracker,DELETE - removes an AuditTracker,,,auditDeleteTracker,,
/audit/consentrecords/,GET,UC-C-PIC-AT-003,,ConsentRecordFilter,ConsentRecord<List>,LIST - fetch ConsentRecord objects,,,auditConsentRecordList,,
/audit/consentrecord/{consentRecordId}/,GET,,,ConsentRecord,ConsentRecord,READ,,,auditConsentRecordRead,,
/audit/agreements/,GET,"UC-C-PIC-AT-001, UC-C-PIC-AT-003",,AgreementFilter,Agreement<List>,,,,auditAgreementList,,
/audit/agreement/{agreementId}/,GET,"UC-C-PIC-AT-001, UC-C-PIC-AT-003",,AgreementFilter,Agreement,READ,,,auditReadRecord,,
,,,,,,,,,,,
,,,,,,,,,,,
API tag: notification,,,,,,,,,,,
,,,,,,,,,,,
API tag: callback,,,,,,,,,,,
/callback/registrybb/revision/{id}/,,,,RegistryReference,,"For asynchronous flows, the Consent BB will require a callback from the Registry BB when saving and updating records on an Individual.",FALSE,,,,
,,,,,,,,,,,
,,,,,,,,,,,
Questions / notes,,,,,,,,,,,
"Sensitive/Personal data - Make Individual ID stored as some kind of anonymous token in HTTP headers, session state or like-wise. We should avoid spilling over individually identifiable data in HTTP server logs etc.",,,,,,,,,,,
List filters and pagination,,,,,,,,,,,
"Should we have CRUD for ""Individual""?",,,,,,,,,,,
TODO,,,,,,,,,,,
m2m fields: Policy <> Agreement,,,,,,,,,,,
atomic endpoints: List of ConsentRecordChoice and Policy,,,,,,,,,,,
"Return values, especially lists in return values",,,,,,,,,,,